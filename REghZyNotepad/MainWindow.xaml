<Window x:Class="REghZyNotepad.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:rznotepad="clr-namespace:REghZyNotepad"
        xmlns:core="clr-namespace:REghZyNotepad.Core;assembly=REghZyNotepad.Core" 
        xmlns:Converters="clr-namespace:REghZyNotepad.Converters" 
        xmlns:editor="clr-namespace:REghZyNotepad.Editor"
        xmlns:attchprop="clr-namespace:REghZyNotepad.AttachedProperties" 
        xmlns:controls="clr-namespace:REghZyNotepad.Controls"
        mc:Ignorable="d"
        Width="800" Height="500"
        ResizeMode="CanResizeWithGrip"
        Style="{DynamicResource CustomWindowStyle}">
    <Window.DataContext>
        <rznotepad:MainViewModel x:Name="MVM"/>
    </Window.DataContext>
    <Window.Resources>
        <Converters:WindowTitleConverter x:Key="TitleConverter"/>
        <Converters:FontConverter x:Key="FontConverter"/>
        <Converters:TextWrappingConverter x:Key="WrappingConverter"/>
        <Converters:BoolToVisibilityConverter x:Key="bool2vis"/>
        <Style TargetType="{x:Type ListBox}" x:Key="HorizontalListbox">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ControlBrightDefaultBorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource ControlDefaultForeground}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="ScrollViewer.PanningMode" Value="HorizontalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="1" 
                                SnapsToDevicePixels="True">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Style="{DynamicResource HorizontalScroller}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ControlDisabledBackground}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ControlDisabledBackground}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding ExitCommand, Mode=OneTime}"/>
        <KeyBinding Key="W" Modifiers="Ctrl" Command="{Binding ExitCommand, Mode=OneTime}"/>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding NewFileCommand, Mode=OneTime}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenFileCommand, Mode=OneTime}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveFileCommand, Mode=OneTime}"/>
        <KeyBinding Key="S" Modifiers="Ctrl + Shift" Command="{Binding SaveFileAsCommand, Mode=OneTime}"/>
        <KeyBinding Key="F" Modifiers="Ctrl" Command="{Binding FindCommand, Mode=OneTime}"/>
        <KeyBinding Key="F3" Command="{Binding FindNextCommand, Mode=OneTime}"/>
        <KeyBinding Key="F3" Modifiers="Shift" Command="{Binding FindPreviousCommand, Mode=OneTime}"/>
        <KeyBinding Key="H" Modifiers="Ctrl" Command="{Binding ReplaceCommand, Mode=OneTime}"/>
        <KeyBinding Key="H" Modifiers="Ctrl + Shift" Command="{Binding ReplaceAllCommand, Mode=OneTime}"/>
        <KeyBinding Key="G" Modifiers="Ctrl" Command="{Binding GotoLineCommand, Mode=OneTime}"/>
    </Window.InputBindings>
    <Window.Title>
        <MultiBinding Converter="{StaticResource TitleConverter}">
            <Binding Source="{x:Static core:ViewModelLocator.Instance}" 
                     Path="Application.Notepad.Editor.Document.HasTextChangedSinceSave" 
                     UpdateSourceTrigger="PropertyChanged"
                     FallbackValue="False"/>
            <Binding Source="{x:Static core:ViewModelLocator.Instance}" 
                     Path="Application.Notepad.Editor.Document.FilePath" 
                     UpdateSourceTrigger="PropertyChanged"
                     FallbackValue="{x:Null}"/>
        </MultiBinding>
    </Window.Title>
    <Grid>
        <Menu VerticalAlignment="Top" Height="18" Background="{DynamicResource Window.Static.Border}">
            <MenuItem Header="File">
                <MenuItem Header="New" InputGestureText="Ctrl + N" Command="{Binding NewFileCommand, Mode=OneTime}">
                    <MenuItem.Icon>
                        <Image Source="Resources/newFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Open" InputGestureText="Ctrl + O" Command="{Binding OpenFileCommand, Mode=OneTime}">
                    <MenuItem.Icon>
                        <Image Source="Resources/openFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save" InputGestureText="Ctrl + S" Command="{Binding SaveFileCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.Icon>
                        <Image Source="Resources/saveFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save as..." InputGestureText="Ctrl + Shift + S" Command="{Binding SaveFileAsCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.Icon>
                        <Image Source="Resources/saveFileAs.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Style="{DynamicResource MenuItemSeparator}"/>
                <MenuItem Header="Clear Document" Command="{Binding ClearDocumentCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.Icon>
                        <Image Source="Resources/closePane.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Exit" InputGestureText="Esc" Command="{Binding ExitCommand, Mode=OneTime}">
                    <MenuItem.Icon>
                        <Image Source="Resources/closePane.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Undo" InputGestureText="Ctrl + Z"         CommandTarget="{Binding ElementName=TextEditor}" Command="ApplicationCommands.Undo">
                    <MenuItem.Icon>
                        <Image Source="Resources/undo.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Redo" InputGestureText="Ctrl + Shift + Z" CommandTarget="{Binding ElementName=TextEditor}" Command="ApplicationCommands.Redo">
                    <MenuItem.Icon>
                        <Image Source="Resources/redo.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Style="{DynamicResource MenuItemSeparator}"/>
                <MenuItem Header="Cut"    InputGestureText="Ctrl + X"       CommandTarget="{Binding ElementName=TextEditor}" Command="ApplicationCommands.Cut">
                    <MenuItem.Icon>
                        <Image Source="Resources/cut.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Copy"   InputGestureText="Ctrl + C"       CommandTarget="{Binding ElementName=TextEditor}" Command="ApplicationCommands.Copy">
                    <MenuItem.Icon>
                        <Image Source="Resources/copy.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Paste"  InputGestureText="Ctrl + V"       CommandTarget="{Binding ElementName=TextEditor}" Command="ApplicationCommands.Paste">
                    <MenuItem.Icon>
                        <Image Source="Resources/paste.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Delete" InputGestureText="Del"            CommandTarget="{Binding ElementName=TextEditor}" Command="ApplicationCommands.Delete">
                    <MenuItem.Icon>
                        <Image Source="Resources/binCan.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator Style="{DynamicResource MenuItemSeparator}"/>
                <MenuItem Header="Find..."        InputGestureText="Ctrl + F" Command="{Binding FindCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.Icon>
                        <Image Source="Resources/findReplace.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Find next"      InputGestureText="F3"         Command="{Binding FindNextCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}"/>
                <MenuItem Header="Find previous"  InputGestureText="Shift + F3" Command="{Binding FindPreviousCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}"/>
                <MenuItem Header="Replace..."     InputGestureText="Ctrl + H"   Command="{Binding ReplaceCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.Icon>
                        <Image Source="Resources/findReplace.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Replace All..." InputGestureText="Ctrl + Shift + H" Command="{Binding ReplaceAllCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}"/>
                <MenuItem Header="Goto (line)"    InputGestureText="Ctrl + G"         Command="{Binding GotoLineCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}">
                    <MenuItem.Icon>
                        <Image Source="Resources/topTabsOpen.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Format" Command="{Binding ShowFormatCommand, Mode=OneTime}" IsEnabled="{Binding Source={x:Static core:ViewModelLocator.Instance}, Path=Application.IsNotepadAvailable, UpdateSourceTrigger=PropertyChanged}"/>
            <MenuItem Header="View">
                <MenuItem Header="Show Info bar (at the bottom)" Command="{Binding SwitchShowBottomBarCommand, Mode=OneTime}">
                    <MenuItem.Icon>
                        <Image Source="Resources/topTabsOpen.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Show current-line outline" Command="{Binding SwitchLineOutlineCommand, Mode=OneTime}"/>
            </MenuItem>
            <MenuItem Header="Theme">
                <MenuItem Header="Light" Click="ChangeTheme" Uid="0">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF848484" Fill="#FFE8E8E8" StrokeThickness="2" StrokeLineJoin="Round"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Dark" Click="ChangeTheme" Uid="1">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF404040" Fill="#FF1B1B1B" StrokeThickness="2" StrokeLineJoin="Round"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Red" Click="ChangeTheme" Uid="2">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FFD81313" Fill="#FF131313" StrokeThickness="2" StrokeLineJoin="Round"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About" Command="{Binding AboutCommand, Mode=OneTime}"/>
            </MenuItem>
        </Menu>
        <DockPanel Margin="0,18,0,0" DataContext="{Binding Application, Source={x:Static core:ViewModelLocator.Instance}, Mode=OneTime}">
            <Border Visibility="Collapsed" Height="31" DockPanel.Dock="Top" BorderThickness="0 0 0 1">
                <Grid>
                    <ListBox Background="Transparent" BorderBrush="Transparent"
                             BorderThickness="0"
                             ItemsSource="{Binding Notepads, UpdateSourceTrigger=PropertyChanged}"
                             SelectedItem="{Binding Notepad, UpdateSourceTrigger=PropertyChanged}"
                             Style="{DynamicResource HorizontalListbox}"
                             ScrollViewer.VerticalScrollBarVisibility="Disabled"
                             ScrollViewer.CanContentScroll="False"
                             attchprop:HorizontalScrolling.ForceHorizontalScrollingValue="True"
                             attchprop:HorizontalScrolling.HorizontalScrollingAmountValue="3">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Horizontal" IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <controls:NotepadItemControl DataContext="{Binding}" Margin="-1 -1 0 0"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>
            <DockPanel DataContext="{Binding Notepad, UpdateSourceTrigger=PropertyChanged}">
                <Grid DockPanel.Dock="Bottom" VerticalAlignment="Bottom" Height="22" 
                      Background="{DynamicResource REghZyBrush.Primary.1.Background.Static}"
                      Visibility="{Binding ShowInfoBar, ElementName=MVM, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource bool2vis}}">
                    <DockPanel DataContext="{Binding Editor, UpdateSourceTrigger=PropertyChanged}" >
                        <DockPanel.Resources>
                            <Converters:NumberAddConverter x:Key="AddNumber"/>
                            <Converters:FilePathPreviewConverter x:Key="PathConverter"/>
                        </DockPanel.Resources>
                        <TextBlock Padding="2" FontFamily="Consolas"
                                   Text="{Binding Document.WordCount, UpdateSourceTrigger=PropertyChanged, StringFormat={}({0} words)}"
                                   VerticalAlignment="Center" 
                                   DockPanel.Dock="Right"
                                   ToolTip="The number of calculated words in this notepad"/>
                        <TextBlock Padding="2" FontFamily="Consolas"
                                   Text="{Binding Document.Length, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} chars}"
                                   VerticalAlignment="Center" 
                                   DockPanel.Dock="Right"
                                   ToolTip="The number of characters in this notepad"/>
                        <Separator Style="{DynamicResource VerticalSeparator}" DockPanel.Dock="Right"/>
                        <TextBlock Padding="2 2 1 2" 
                                   Text="{Binding Format.FontSize, StringFormat=(\{0\}px), UpdateSourceTrigger=PropertyChanged}"
                                   VerticalAlignment="Center"
                                   DockPanel.Dock="Right"
                                   ToolTip="The active font size for this notepad"/>
                        <TextBlock Padding="2" 
                                   Text="{Binding Format.Font, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FontConverter}}" 
                                   FontWeight="{Binding Format.Weight, UpdateSourceTrigger=PropertyChanged}"
                                   TextDecorations="{Binding Format.Decoration, UpdateSourceTrigger=PropertyChanged}"
                                   VerticalAlignment="Center"
                                   DockPanel.Dock="Right"
                                   ToolTip="The active font for this notepad"/>
                        <Separator Style="{DynamicResource VerticalSeparator}" DockPanel.Dock="Right"/>
                        <TextBlock Padding="0 0 2 0" FontFamily="Consolas"
                                   Text="{Binding Column, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AddNumber}}" 
                                   VerticalAlignment="Center" 
                                   DockPanel.Dock="Right"
                                   ToolTip="Column number that the TextBox caret is on (Starting at 1 on the left)"/>
                        <TextBlock Padding="0" FontFamily="Consolas" Text="C" VerticalAlignment="Center" DockPanel.Dock="Right"
                                   ToolTip="Column number that the TextBox caret is on (Starting at 1 on the left)"/>
                        <TextBlock Padding="0"  Text=", " VerticalAlignment="Center" DockPanel.Dock="Right"/>
                        <TextBlock Padding="0" FontFamily="Consolas"
                                   Text="{Binding Line, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource AddNumber}}" 
                                   VerticalAlignment="Center" 
                                   DockPanel.Dock="Right"
                                   ToolTip="Line number that the TextBox caret is on (Starting at 1 at the top)"/>
                        <TextBlock Padding="2 0 0 0" FontFamily="Consolas" Text="L" VerticalAlignment="Center" DockPanel.Dock="Right"
                                   ToolTip="Line number that the TextBox caret is on (Starting at 1 at the top)"/>
                        <Separator Style="{DynamicResource VerticalSeparator}" DockPanel.Dock="Right" Margin="1 0 2 0"/>
                        <TextBox Padding="2 2 2 2" BorderThickness="0"
                                 Background="Transparent"
                                 VerticalContentAlignment="Center"
                                 IsReadOnly="True"
                                 FontFamily="Consolas"
                                 Text="{Binding Document.FilePath, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource PathConverter}}"
                                 VerticalAlignment="Center" 
                                 HorizontalAlignment="Stretch"
                                 ToolTip="The path to the file that is currently opened">
                        </TextBox>
                    </DockPanel>
                </Grid>
                <Grid>
                    <Grid.Resources>
                        <Converters:BoolToOpacityConverter x:Key="bool2opacity"/>
                    </Grid.Resources>
                    <editor:REghZyTextEditor x:Name="TextEditor"
                        DataContext="{Binding Editor, UpdateSourceTrigger=PropertyChanged}"
                        Text="{Binding Document.Contents, UpdateSourceTrigger=PropertyChanged}"
                        FontSize="{Binding Format.FontSize, UpdateSourceTrigger=PropertyChanged}"
                        FontFamily="{Binding Format.Font, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource FontConverter}}"
                        FontWeight="{Binding Format.Weight, UpdateSourceTrigger=PropertyChanged}"
                        FontStyle="{Binding Format.Style, UpdateSourceTrigger=PropertyChanged}"
                        TextDecorations="{Binding Format.Decoration, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="{Binding Format.IsWrapped, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource WrappingConverter}}"
                        SelectionChanged="TextEditor_SelectionChanged"
                        MouseWheel="TextEditor_MouseWheel"
                        SizeChanged="TextEditor_SizeChanged"
                        ScrollViewer.ScrollChanged="TextEditor_ScrollChanged"
                        ScrollViewer.CanContentScroll="False"
                        AllowDrop="True" 
                        PreviewDragOver="NotepadDragEnter"
                        Drop="NotepadDrop"
                        AcceptsReturn="True"
                        IsTabStop="True"
                        AcceptsTab="True"
                        BorderThickness="0 1 0 0" 
                        AutoWordSelection="False"
                        IsInactiveSelectionHighlightEnabled="True"
                        SpellCheck.SpellingReform="Postreform"
                        Language="en"
                        UndoLimit="1000"
                        attchprop:HorizontalScrolling.UseHorizontalScrollingValue="True"
                        ScrollViewer.PanningMode="VerticalFirst"
                        HorizontalScrollBarVisibility="Visible"
                        VerticalScrollBarVisibility="Visible"
                        ScrollViewer.HorizontalScrollBarVisibility="Visible"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                        Focusable="True" 
                        Visibility="Visible" 
                        Style="{DynamicResource REghZyTextEditorStyle}">
                        <editor:REghZyTextEditor.ContextMenu>
                            <ContextMenu OverridesDefaultStyle="False">
                                <MenuItem Header="Undo" InputGestureText="Ctrl + Z"         Command="ApplicationCommands.Undo"/>
                                <MenuItem Header="Redo" InputGestureText="Ctrl + Shift + Z" Command="ApplicationCommands.Redo"/>
                                <Separator Style="{DynamicResource MenuItemSeparator}"/>
                                <MenuItem Header="Cut"    InputGestureText="Ctrl + X" Command="ApplicationCommands.Cut"/>
                                <MenuItem Header="Copy"   InputGestureText="Ctrl + C" Command="ApplicationCommands.Copy"/>
                                <MenuItem Header="Paste"  InputGestureText="Ctrl + V" Command="ApplicationCommands.Paste"/>
                                <MenuItem Header="Delete" InputGestureText="Del"      Command="ApplicationCommands.Delete"/>
                            </ContextMenu>
                        </editor:REghZyTextEditor.ContextMenu>
                        <editor:REghZyTextEditor.InputBindings>
                            <KeyBinding Key="Z" Modifiers="Ctrl+Shift" Command="ApplicationCommands.Redo"/>
                        </editor:REghZyTextEditor.InputBindings>
                    </editor:REghZyTextEditor>
                    <Border x:Name="aditionalSelection"
                            Visibility="Collapsed"
                            BorderBrush="{DynamicResource REghZyBrush.Primary.3.Background.Static}"
                            Opacity="{Binding ElementName=MVM, Path=ShowOutlineBar, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource bool2opacity}, ConverterParameter=0.0|0.7}"
                            BorderThickness="2"
                            CornerRadius="2"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch" 
                            Margin="0"
                            IsHitTestVisible="False"/>
                </Grid>
            </DockPanel>
        </DockPanel>
    </Grid>
</Window>
